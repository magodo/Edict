#:kivy 1.8.0
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import SlideTransition kivy.uix.screenmanager.SlideTransition

####################
#  Screen Manager  #
####################

<EdictScreenManager>:

    HomeScreen: 
        name: 'home'

    OffLineScreen:
        name: 'offline'

    PersonalScreen:
        name: 'personal'

    PersonalManagerScreen:
        name: 'manager'

#####################
#  Views            #
#####################
<ExistCollView>:
    size_hint: (.5, .2)
    auto_dismiss: True

    Label:
        text: "Word already exists!"
        font_size: 20

<SuccessCollView>:
    size_hint: (.5, .2)
    auto_dismiss: True

    Label:
        text: "Word successfully collected!"
        font_size: 20


<CollView>:
    size_hint: (.5, .5)
    auto_dismiss: False

    FloatLayout: 

        Button:
            size_hint: (.2, .2)
            pos_hint: {"center_x": .5, "center_y": .2}
            text: "Cancel"
            on_press: 
                root.dismiss()

        Button:
            size_hint: (.2, .2)
            pos_hint: {"center_x": .7, "center_y": .6}
            text: "Collect"
            on_press: 
                root.collect(app.personal_dict, app.personal_dict_path)
                root.dismiss()
        Label:
            font_size: 15
            pos_hint: {"center_x": .7, "center_y": .8}
            text: "No voice"

        SampleButton:
            target: root.target
            size_hint: (.2, .2)
            pos_hint: {"center_x": .3, "center_y": .6}
            text: "Sample"
            on_press: self.startRecord()
            on_release: 
                self.stopRecord()
                self.popupChoose()

        Label:
            font_size: 15
            pos_hint: {"center_x": .3, "center_y": .8}
            text: "Voice"


<CollChooseView>:
    size_hint: (.4, .3)
    auto_dismiss: False

    FloatLayout:
        
        Label:
            font_size: 20
            pos_hint: {"center_x": .5, "center_y": .7}
            text: "Voice sample accept?"

        Button:
            size_hint: (.3, .2)
            pos_hint: {"center_x": .7, "center_y": .2}
            text: "Deny"
            on_press: root.dismiss()

        Button:
            size_hint: (.3, .2)
            pos_hint: {"center_x": .3, "center_y": .2}
            text: "Collect"
            on_press: 
                root.collect(app.personal_dict, app.personal_dict_path)
                root.dismiss()
                root.last_view.dismiss()

<WordView>:
    size_hint: (.8, .8)
    auto_dismiss: True

    FloatLayout:

        Label:
            text: root.target.word
            font_size: 30

            size_hint: (None, None)
            size: self.texture_size
            pos_hint: {"center_x": .5, "top": .95}

        ScrollView:

            size_hint: (.8, .6)
            pos_hint: {"center_x": .5, "center_y": .5}
            do_scroll_x: False

            ChineseLabel:
                text: root.target.meaning

                font_size: 20
                text_size: (self.parent.width, None)  

                size_hint: (None, None)
                size: (self.parent.width, self.texture_size[1])

        DeleteButton:
            text: "REMOVE WORD"
            size_hint: (.3, .05)
            pos_hint: {"right": .95, "y": .05}

            on_release: self.delete(root.target.word, app.personal_dict, app.personal_dict_path)

<SuccessDelView>:

    size_hint: (.5, .2)
    auto_dismiss: True

    on_dismiss: root.last_view.dismiss()

    Label:
        text: "Word %s successfully deleted!" %root.word
        font_size: 20

#####################
#  Buttons          #
#####################
<ListWordButton>:
    on_release: self.show(app.personal_dict[self.text])

#####################
#  Screens          #
#####################

<HomeScreen>:

    FloatLayout:

        Button:
            text: "Off-Line Dict"
            size_hint: (.3, .2)
            pos_hint: {'center_x': .7, 'center_y': .4}
            on_press: 
                root.manager.transition.direction = "left"
                root.manager.current = "offline"

        Button:
            text: "Personal Dict"
            size_hint: (.3, .2)
            pos_hint: {'center_x': .3, 'center_y': .4}
            on_press: 
                root.manager.transition.direction = "left"
                root.manager.current = "personal"

        Label:
            text: 'Edict'
            font_size: 35
            bold: True
            pos_hint: {'center_x': .5, 'center_y': .8}


<OffLineScreen>:

    FloatLayout:

        Label: 
            text: "Off-line Mode"
            font_size: 35
            bold: True
            pos_hint: {'center_x': .5, 'center_y': .8}

        ReferTextInput:
            coll_button: coll_button
            show_label: show_label

            id: refer_textinput
            pos_hint: {'center_x': .5, 'center_y': .6}
            size_hint: (.4, .06)
            multiline: False
            
            on_text: self.coll_button.disabled = True
            on_text_validate: self.offlinerefer(app.offline_dict, self.text)

        ScrollView:
            id: scroll_view
            pos_hint: {'center_x': .5, 'center_y': .25}
            size_hint: (.4, .4)
            do_scroll_x: False
            
            ChineseLabel:
                id: show_label
                text: '' 
                font_size: 20
                size_hint: (None, None)
                text_size: (self.parent.width, None)
                size: (self.parent.width, self.texture_size[1])
                
        CollButton:
            refer_textinput: refer_textinput
            show_label: show_label

            id: coll_button
            pos_hint: {'center_x': .85, 'center_y': .6}
            size_hint: (.1, .06)
            text: "Collect"
            disabled: True

            on_press:
                self.show_view(self.refer_textinput.text, self.show_label.text, app.personal_dict)
        
        Button:
            text: "Back"
            pos_hint: {'center_x': .1, 'center_y': .1}
            size_hint: (.1, .1)
            on_press: 
                root.manager.transition.direction = "right"
                root.manager.current = "home"

<PersonalScreen>:

    FloatLayout:

        Label: 
            text: "Personal Mode"
            font_size: 35
            bold: True
            pos_hint: {'center_x': .5, 'center_y': .8}

        ReferTextInput:
            show_label: show_label

            id: refer_textinput
            pos_hint: {'center_x': .5, 'center_y': .6}
            size_hint: (.4, .06)
            multiline: False
            
            on_text_validate: self.personalrefer(app.personal_dict, self.text)

        ScrollView:
            id: scroll_view
            pos_hint: {'center_x': .5, 'center_y': .25}
            size_hint: (.4, .4)
            do_scroll_x: False
            
            ChineseLabel:
                id: show_label
                text: '' 
                font_size: 20
                size_hint: (None, None)
                text_size: (self.parent.width, None)
                size: (self.parent.width, self.texture_size[1])
                
                
        Button:
            text: "Back"
            pos_hint: {'center_x': .1, 'center_y': .1}
            size_hint: (.1, .1)
            on_press: 
                root.manager.transition.direction = "right"
                root.manager.current = "home"

        Button:
            text: "Manage"
            pos_hint: {"center_x": .8, "center_y": .3}
            size_hint: (.1, .06)
            on_press:
                root.manager.transition = FadeTransition()
                root.manager.current = "manager"

        SampleButton:
            show_label: show_label

            text: "Refer"
            pos_hint: {"center_x": .8, "center_y": .6}
            size_hint: (.1, .06)
            on_press:
                self.startRecord()
            on_release:
                self.stopRecord()
                match = self.refer(app.personal_dict)
                if match: \
                self.show_label.text = app.personal_dict[match].meaning
                else: \
                self.show_label.text = "No voiced word in Personal dictionary!"



<PersonalManagerScreen>:

    FloatLayout:

        Button:
            text: "Back"
            pos_hint: {'center_x': .1, 'center_y': .1}
            size_hint: (.1, .1)
            on_press: 
                root.manager.current = "personal"
                root.manager.transition = SlideTransition()

        ScrollView:

            pos_hint: {"center_x": .5, "center_y": .4}
            size_hint: (.5, .5)

            scroll_timeout: 100
            do_scroll_x: False

            WordLayout:
                wordset: app.personal_dict
                on_wordset: self.update()
                
                cols: 1
                spacing: 10
                padding: 10

                row_default_height: self.parent.height / 8.0

                size_hint: (None, None)
                width: self.parent.width
                on_minimum_height: self.setter("height")(self, self.minimum_height)

    
