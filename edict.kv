#:kivy 1.8.0
#: import resource_find kivy.resources.resource_find
#: import ListAdapter kivy.adapters.listadapter.ListAdapter
#: import main main

############################# Root #############################
<EdictRoot>:
    OfflineScreen:
        name: "offline"
    PersonalScreen:
        name: "personal"
    PersonalManagerScreen:
        name: "manager"
    WordScreen:
        name: "word"
    


############################# Screen #############################
<OfflineScreen>:
    app: app
    text_input: text_input
    text: text_input.text
    word_list: word_list

    BoxLayout:
        orientation: "vertical"
        BoxLayout:
            size_hint_y: 8
            orientation: "vertical"
            BoxLayout:
                orientation: "horizontal"
                size_hint_y: None
                height: "40dp"
                TextInput:
                    id: text_input
                    focus: True
                    multiline: False
                    on_text_validate: root.refer(self.text, app.root.offline_dict_path)
            ListView:
                id: word_list
                adapter:
                    ListAdapter(
                    data = [],
                    cls = main.WordButton
                    )
        NaviBar

<PersonalScreen>:
    app: app
    text_input: text_input
    text: text_input.text
    word_list: word_list

    BoxLayout:
        orientation: "vertical"
        BoxLayout:
            size_hint_y: 8
            orientation: "vertical"
            BoxLayout:
                orientation: "horizontal"
                size_hint_y: None
                height: "40dp"
                spacing: "10dp"
                Button: 
                    size_hint_x: 1
                    text: "Manage"
                    background_normal: "graphics/button_normal.png"
                    background_down: "graphics/button_down.png"
                    on_release: app.root.show_personal_manager()
                TextInput:
                    id: text_input
                    size_hint_x: 2
                    multiline: False
                    on_text_validate: root.refer(self.text, app.root.personal_dict)
                SampleButton: 
                    size_hint_x: 1
                    text: "Voice"
                    background_normal: "graphics/button_normal.png"
                    background_down: "graphics/button_down.png"
                    on_release: 
                        root.wave = self.startRecord()[0]
                        root.voice_refer()
                    # For continuous record
                    #on_press: 
                    #    root.wave = self.startRecord()[0]
                    #    root.voice_refer()
                    #on_release: 
                    #    root.wave = self.stopRecord()
                    #    root.voice_refer()

            ListView:
                id: word_list
                adapter:
                    ListAdapter(
                    data = [],
                    cls = main.WordButton
                    )
        NaviBar
    
<PersonalManagerScreen>:
    word_list: word_list

    BoxLayout:
        orientation: "vertical"
        spacing: "20dp"
        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: "40dp"
            Button: 
                size_hint_x: 1
                text: "Back"
                background_normal: "graphics/button_normal.png"
                background_down: "graphics/button_down.png"
                on_release: app.root.show_personal()
            Label:
                size_hint_x: 3
                text: "My Personal Dictionary"
            Button: 
                size_hint_x: 1
                text: "Edit"
                background_normal: "graphics/button_normal.png"
                background_down: "graphics/button_down.png"
        ListView:
            id: word_list
            adapter:
                ListAdapter(
                data = [],
                cls = main.WordButton
                )

<WordScreen>:
    word: word
    meaning: meaning

    BoxLayout:
        orientation: "vertical"
        spacing: "20dp"
        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: "40dp"
            Button:
                size_hint_x: 1
                text: "Back"
                background_normal: "graphics/button_normal.png"
                background_down: "graphics/button_down.png"
                on_release: app.root.show_last_screen()
            Label:
                id: word
                size_hint_x: 3
            Button: 
                size_hint_x: 1
                text: "Collect"
                background_normal: "graphics/button_normal.png"
                background_down: "graphics/button_down.png"
                on_release: 
                    root.collect(word.text, meaning.text)
        ScrollView:
            do_scroll_x: False
            Label:
                id: meaning
                font_name: resource_find(app.config.get("Font", "File"))
                text_size: (self.parent.width, None)
                size_hint: (None, None)
                size: (self.parent.width, self.texture_size[1])

######################## Popups ##########################
<CollectPopup>:
    size_hint: (.8, .4)
    title: "Voice Sample"
    content:
    FloatLayout:
        SampleButton:
            size_hint: (.3, .2)
            pos_hint: {"center_x": .3, "center_y": .3}
            text: "Record"
            background_normal: "graphics/button_normal.png"
            background_down: "graphics/button_down.png"
            on_release: 
                root.wave, root.bin_data = self.startRecord()
                root.popupChoose()
            # For continuous record
            #on_press: 
            #    root.wave, root.bin_data = self.startRecord()
            #    root.popupChoose()
            #on_release: 
            #    root.wave = self.stopRecord()
            #    root.popupChoose()
        Button:
            size_hint: (.3, .2)
            pos_hint: {"center_x": .8, "center_y": .3}
            text: "Cancel"
            background_normal: "graphics/button_normal.png"
            background_down: "graphics/button_down.png"
            on_release: root.dismiss()

<ChoosePopup>:
    title: "Sample accept?"
    size_hint: (.8, .4)
    content:
    FloatLayout:
        Button:
            size_hint: (.3, .2)
            pos_hint: {"center_x": .3, "center_y": .3}
            text: "Accept"
            background_normal: "graphics/button_normal.png"
            background_down: "graphics/button_down.png"
            on_release: root.accept()
        Button:
            size_hint: (.3, .2)
            pos_hint: {"center_x": .8, "center_y": .3}
            text: "Deny"
            background_normal: "graphics/button_normal.png"
            background_down: "graphics/button_down.png"
            on_release: root.deny()

######################## Others ##########################
<NaviBar@BoxLayout>:
    orientation: "horizontal"
    size_hint_y: 1
    Button: 
        text: "off-line"
        background_normal: "graphics/button_normal.png"
        background_down: "graphics/button_down.png"
        on_release: app.root.show_offline()
    Button: 
        text: "personal"
        background_normal: "graphics/button_normal.png"
        background_down: "graphics/button_down.png"
        on_release: app.root.show_personal()
    Button:
        text: "Settings"
        background_normal: "graphics/button_normal.png"
        background_down: "graphics/button_down.png"
        on_release: app.open_settings()

<WordButton>:
    deselected_color: [1,1,1,0]
    selected_color: [1,1,1,0]
    on_release: 
        app.root.show_word(self.text, flag = 0)
